<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="dataSource"
		  class="org.apache.commons.dbcp2.BasicDataSource"
		  p:driverClassName="oracle.jdbc.driver.OracleDriver"
		  p:url="jdbc:oracle:thin:@localhost:1521:XE"
		  p:username="project3"
		  p:password="project3"
	/>
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		  p:dataSource-ref="dataSource"
	/>
	<bean id="sqlSessionFactory"
		  class="org.mybatis.spring.SqlSessionFactoryBean"
		  p:dataSource-ref="dataSource"
		  p:configLocation="classpath:sqlConfig/sqlConfig.xml"
		  p:mapperLocations="classpath:mappers/*-Mapper.xml"
	/>
	<bean id="sqlSession"
	      class="org.mybatis.spring.SqlSessionTemplate"
	      c:sqlSessionFactory-ref="sqlSessionFactory"
	/>

	<!-- boardImgPath -->
	<bean id="imgPath" class="java.lang.String">
		<constructor-arg value="${summernote.img}" />      
	</bean>
	
	<!-- member.picture -->
	<bean id="picturePath" class="java.lang.String">
		<constructor-arg value="${member.picture.upload}" />      
	</bean>
	
	<!-- file upload -->
	<bean id="fileUploadPath" class="java.lang.String">
		<constructor-arg value="${pds.upload}"/>
	</bean>
	
	<!-- DAO	 -->
	<bean id="noticeDAO" 
	class="com.spring.dao.NoticeDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>
	<bean id="replyDAO" 
	class="com.spring.dao.ReplyDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	
	<bean id="memberDAO" 
	class="com.spring.dao.MemberDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	     	
	<bean id="lectureDAO" 
	class="com.spring.dao.LectureDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	
	<bean id="chatDAO" 
	class="com.spring.dao.ChatDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	
	<bean id="freeBoardDAO" 
	class="com.spring.dao.FreeBoardDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	
	<bean id="scheduleDAO" 
	class="com.spring.dao.ScheduleDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>
	<bean id="groupDAO" 
	class="com.spring.dao.GroupDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	
	<bean id="pdsDAO" 
	class="com.spring.dao.PdsDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>
	<bean id="qnaDAO" 
	class="com.spring.dao.QnaDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>		
	<bean id="faqDAO" 
	class="com.spring.dao.FaqDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	
	<bean id="adminDAO" 
	class="com.spring.dao.AdminDAOImpl"
	p:sqlSession-ref="sqlSession"
	/>	
	<!-- service  -->	
	<bean id="noticeService" 
	class="com.spring.service.NoticeServiceImpl"
	p:noticeDAO-ref="noticeDAO"
	/>
	<bean id="replyService" 
	class="com.spring.service.ReplyServiceImpl"
	p:replyDAO-ref="replyDAO"
	/>
	<bean id="memberService" 
	class="com.spring.service.MemberServiceImpl"
	p:memberDAO-ref="memberDAO"
	/>
	<bean id="lectureService" 
	class="com.spring.service.LectureServiceImpl"
	p:lectureDAO-ref="lectureDAO"
	/>
	<bean id="chatService" 
	class="com.spring.service.ChatServiceImpl"
	p:chatDAO-ref="chatDAO"
	/>
	<bean id="freeBoardService" 
	class="com.spring.service.FreeBoardServiceImpl"
	p:freeBoardDAO-ref="freeBoardDAO"
	/>
	<bean id="scheduleService" 
	class="com.spring.service.ScheduleServiceImpl"
	p:scheduleDAO-ref="scheduleDAO"
	/>
	<bean id="groupService" 
	class="com.spring.service.GroupServiceImpl"
	p:groupDAO-ref="groupDAO"
	/>
	<bean id="pdsService" 
	class="com.spring.service.PdsServiceImpl"
	p:pdsDAO-ref="pdsDAO"
	/>
	<bean id="qnaService" 
	class="com.spring.service.QnaServiceImpl"
	p:qnaDAO-ref="qnaDAO"
	/>
	<bean id="faqService" 
	class="com.spring.service.FaqServiceImpl"
	p:faqDAO-ref="faqDAO"
	/>
	<bean id="adminService" 
	class="com.spring.service.AdminServiceImpl"
	p:adminDAO-ref="adminDAO"
	/>
	
	<!-- 테스트용 잡  -->
	
	<bean id="testJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	
	    <!-- 서비스 구현 객체의 빈 이름을 인자로 줍니다. -->
	
	    <property name="targetObject" ref="groupService" />
	
	    <!-- 서비스 객체에서 주기적으로 실행될 메소드른 지정합니다. -->
	
	    <property name="targetMethod" value="testJobMethod" />
	
	    <!-- 동시 실행을 방지합니다. -->
	
	    <property name="concurrent" value="false" />
	
	</bean>
	
	
	
	<!-- 테스트용  트리거-->
	
	<bean id="testJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	
	    <property name="jobDetail" ref="testJob" />
	
	    <!-- CronTrigger를 사용하여 2분 간격으로 실행되도록 지정했습니다. -->
		
		<property name="cronExpression" value="0 57 23 * * ?" />

		
	</bean>
	
	
	
	<!-- 테스트용 스케줄러 -->
	
	<bean id="testJobScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	
	    <property name="triggers">
	
	        <!-- 앞에서 설정한 트리거를 등록합니다. 필요하면 여러개 만들어서 등록하면 됩니다. -->
	
	        <list><ref bean="testJobTrigger" /></list>
	
	    </property>
	
	</bean>

	
	
	
	
	
	
	
	
	
	
	
	
	<!-- gmail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	        <property name="port" value="465" />
	        <property name="username" value="ckrudtjr938@gmail.com" />
	        <property name="password" value="rudtjr93" />
	        <property name="defaultEncoding" value="UTF-8"/>
	        <property name="javaMailProperties">
	            <props>
	                <prop key="mail.smtp.host">smtp.gmail.com</prop>
	                <prop key="mail.smtp.starttls.enable">true</prop>
	                <prop key="mail.smtp.auth">true</prop>
	                <prop key="mail.smtp.debug">true</prop>
	                <prop key="mail.smtp.socketFactory.port">465</prop>
	                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
	                <prop key="mail.smtp.socketFactory.fallback">false</prop>
	            </props>
	        </property>
	</bean>
	<!-- json 처리할때 -->
   <bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
	    <property name="contentType" value="application/json;charset=UTF-8"></property>
	</bean>  
</beans>
